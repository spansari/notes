apiVersion: v1
kind: Service
metadata:
  name: note-service
  labels:
    app: note-service
spec:
  ports:
  - port: 80
    targetPort: 8080
    name: http
  selector:
    app: note-service
---  
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: note-service-v1
spec:
  replicas: 1  
  template:
    metadata:
      labels:
        app: note-service
        version: v1
    spec:
      containers:
        - name: app
          image: gcr.io/mtech-wms-backstage-poc/notes-service:0.5
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: JAEGER_SERVICE_NAME
              value: note-service
#            - name: JAEGER_ENDPOINT
#              value: http://jaeger-collector.istio-system.svc:14268/api/traces
#            - name: JAEGER_PROPAGATION
#              value: b3
#            - name: JAEGER_AGENT_HOST
#              value: localhost  # default
#            - name: JAEGER_AGENT_PORT
#              value: "6831"
#            - name: JAEGER_SAMPLER_TYPE
#              value: const 
#            - name: JAEGER_SAMPLER_PARAM
#              value: 1
            - name: DB_HOST
              value: 127.0.0.1:3306
            - name: DB_URL
              value: jdbc:mysql://127.0.0.1/backstage?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials-backstage-dev
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials-backstage-dev
                  key: password
            - name: DATABASE
              value: backstage
            - name: KAFKA_BOOTSTRAP
              value: 10.254.128.13:9092
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy",
                    "-instances=mtech-wms-backstage-poc:us-east4:backstage-db-1=tcp:3306",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          securityContext:
            runAsUser: 2  # non-root user
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
      # [END volumes]
---
